{"version":3,"file":"static/js/186.5e08902e.chunk.js","mappings":"yNAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6GAEEC,EAAAA,GAAAA,aAAsBP,GAFxB,OAEdG,EAFc,OAGpBC,EAAWD,GAHS,gDAKpBK,QAAQC,IAAR,MALoB,yDAAH,qDAQrBH,GACD,GAAE,CAACN,KAGF,gCACsB,IAAnBG,EAAQO,SACP,0BACE,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBZ,EAAQO,SACP,wEAIP,C,uKCrCKM,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKbC,EAAY,mCAAG,WAAMC,GAAN,uFACDN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,4DAA6FO,IAD5F,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZG,EAAS,mCAAG,WAAMxB,GAAN,uFACEiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,oBAAsCgB,EAAtC,oBADF,cACfG,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAKTK,EAAW,mCAAG,WAAMzB,GAAN,uFACFiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACegB,EADf,oBADE,cACnBG,EADmB,yBAIlBA,EAASC,KAAKM,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAM3B,GAAN,uFACHiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACegB,EADf,2BADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAQZd,EAAW,CACpBW,cAAAA,EACAI,aAAAA,EACAE,UAAAA,EACAC,YAAAA,EACAE,aAAAA,E","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { allFetch } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const onActorsOfMovie = async () => {\n      try {\n        const reviews = await allFetch.fetchReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'eb7c9132ba6734f59534fa5b6e14e667';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchByQuery = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data.results;\n};\n\nexport const fetchById = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n  \n\nexport const allFetch = {\n    fetchTrending,\n    fetchByQuery,\n    fetchById,\n    fetchActors,\n    fetchReviews,\n};\n\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","onActorsOfMovie","allFetch","console","log","length","map","review","author","content","id","API_KEY","axios","fetchTrending","response","data","results","fetchByQuery","query","fetchById","fetchActors","cast","fetchReviews"],"sourceRoot":""}