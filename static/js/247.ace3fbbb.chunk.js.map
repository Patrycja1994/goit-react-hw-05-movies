{"version":3,"file":"static/js/247.ace3fbbb.chunk.js","mappings":"yNA6CA,UAzCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6GAECC,EAAAA,GAAAA,YAAqBP,GAFtB,OAEdG,EAFc,OAGpBC,EAAUD,GAHU,gDAKpBK,QAAQC,IAAR,MALoB,yDAAH,qDAQrBH,GACD,GAAE,CAACN,KAGF,0BACE,wBACGG,EAAOO,KAAI,SAAAC,GAAK,OACf,2BACE,gBACEC,MAAM,QACNC,IACEF,EAAMG,aAAN,8CAC2CH,EAAMG,cADjD,oFAIFC,IAAKJ,EAAMK,iBAEb,4BACE,uBAAIL,EAAMM,QACV,uCAAeN,EAAMO,kBAZhBP,EAAMQ,GADA,OAoBxB,C,uKCzCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKbC,EAAY,mCAAG,WAAMC,GAAN,uFACDN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,4DAA6FO,IAD5F,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZG,EAAS,mCAAG,WAAM5B,GAAN,uFACEqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,oBAAsCoB,EAAtC,oBADF,cACfG,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAKTK,EAAW,mCAAG,WAAM7B,GAAN,uFACFqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,4BACeoB,EADf,oBADE,cACnBG,EADmB,yBAIlBA,EAASC,KAAKM,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAM/B,GAAN,uFACHqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,4BACeoB,EADf,2BADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAQZlB,EAAW,CACpBe,cAAAA,EACAI,aAAAA,EACAE,UAAAA,EACAC,YAAAA,EACAE,aAAAA,E","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { allFetch } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    const onActorsOfMovie = async () => {\n      try {\n        const actors = await allFetch.fetchActors(movieId);\n        setActors(actors);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {actors.map(actor => (\n          <li key={actor.id}>\n            <img\n              width=\"200px\"\n              src={\n                actor.profile_path\n                  ? `https://www.themoviedb.org/t/p/w500/${actor.profile_path}`\n                  : `https://www.banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png`\n              }\n              alt={actor.original_name}\n            />\n            <div>\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'eb7c9132ba6734f59534fa5b6e14e667';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchByQuery = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data.results;\n};\n\nexport const fetchById = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n  \n\nexport const allFetch = {\n    fetchTrending,\n    fetchByQuery,\n    fetchById,\n    fetchActors,\n    fetchReviews,\n};\n\n"],"names":["movieId","useParams","useState","actors","setActors","useEffect","onActorsOfMovie","allFetch","console","log","map","actor","width","src","profile_path","alt","original_name","name","character","id","API_KEY","axios","fetchTrending","response","data","results","fetchByQuery","query","fetchById","fetchActors","cast","fetchReviews"],"sourceRoot":""}